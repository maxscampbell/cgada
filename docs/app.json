[{"name":"app.R","content":"#\r\n# This is a Shiny web application. You can run the application by clicking\r\n# the 'Run App' button above.\r\n#\r\n# Find out more about building applications with Shiny here:\r\n#\r\n#    https://shiny.posit.co/\r\n#\r\n\r\n# --- LOAD PACKAGES ---\r\n\r\nlibrary(shiny)\r\nlibrary(bslib)\r\nlibrary(ggplot2)\r\nlibrary(ggpie)\r\n\r\n# --- LOAD HELPERS/SOURCE DATA ---\r\n\r\nsource(\"helpers.R\")\r\n\r\n# --- SHINY APP CODE ---\r\n\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n\r\n    # Application title\r\n    titlePanel(\"Cash Grab Arena - Playtest Data Dashboard\"),\r\n    \r\n    #Create individual tabs for playtesting data\r\n    navset_pill(\r\n      \r\n      #About tab: discuss the premise and purpose of this dashboard\r\n      nav_panel(\"About\",\r\n                \r\n                sidebarPanel(div(\"This dashboard was built to have a way to easily view playtesting data related to\",\r\n                                 a(\"Cash Grab Arena.\", href = \"https://github.com/HazilTheNut/cashgrab\")),\r\n                             div(\"Data displayed in this dashboard was gathered from Cash Grab Arena version 0.12.0 or later.\"),\r\n                             div(\"Data here is primarily focused on the focal gameplay aspects of Cash Grab Arena: classes and trinkets.\"),\r\n                             div(\"Cash Grab Arena was made by HazilTheNut. This dashboard was built by Makse.\")),\r\n                img(src = \"goldnugget.png\", align = \"center\")\r\n                ),\r\n      \r\n      #Class Data tab: display data where the Class is the main focus\r\n      nav_panel(\"Class Data\",\r\n                \r\n                #Sidebar to select data from\r\n                sidebarPanel(\r\n                  \r\n                  #Select the viewset, default KPE.\r\n                  selectInput(\"chooseClassVis\", \"Choose a View\", \r\n                              choices = c(\"Kills per Entry\", \"Coins per Entry\", \"Class Usage\", \"Deaths by Class\"),\r\n                              selected = \"Kills per Entry\"),\r\n                  \r\n                  #Conditional: allow user to facet by Trinket Usage\r\n                  conditionalPanel(\r\n                    condition = \"input.chooseClassVis == 'Kills per Entry' || input.chooseClassVis == 'Coins per Entry' || input.chooseClassVis == 'Deaths by Class'\",\r\n                    checkboxInput(\"groupByTrinket\", \"Group by Trinket Usage\", FALSE)\r\n                  ),\r\n                  \r\n                ),\r\n                \r\n                #Main panel to display data\r\n                mainPanel(\r\n                  \r\n                  conditionalPanel(\r\n                    condition = \"input.chooseClassVis == 'Class Usage'\",\r\n                    plotOutput(\"classUsage\")\r\n                  )\r\n                  \r\n                )\r\n                \r\n                ),\r\n      \r\n      #Trinket Data tab: display data where the Trinket is the main focus\r\n      nav_panel(\"Trinket Data\",\r\n                \r\n                #Sidebar to select data from\r\n                #Select the view, default KPE.\r\n                sidebarPanel(\r\n                  selectInput(\"chooseTrinketVis\", \"Choose a View\", \r\n                              choices = c(\"Kills per Entry\", \"Coins per Entry\", \"Trinket Usage\"),\r\n                              selected = \"Kills per Entry\"),\r\n                  \r\n                  #Conditional: allow user to facet by Class Usage\r\n                  conditionalPanel(\r\n                    condition = \"input.chooseTrinketVis == 'Trinket Usage'\",\r\n                    checkboxInput(\"groupByTrinket\", \"Group by Class\", FALSE)\r\n                  ),\r\n                )\r\n                \r\n                \r\n                )\r\n      \r\n    )\r\n    \r\n    \r\n)\r\n\r\n# Define server logic required to draw the required outputs\r\nserver <- function(input, output) {\r\n\r\n  output$classUsage <- renderPlot({\r\n    \r\n    ggplot(cg_data_full, aes(x = Class.Name, y = Entry.Percent)) +\r\n      geom_bar(stat = \"identity\", color = \"green\", fill = \"green\") +\r\n      theme(legend.position = \"none\") +\r\n      xlab(\"Class\") + ylab(\"% of Total Lives\") +\r\n      labs(title = \"Class Popularity (% of Total Lives Played)\",\r\n           caption = \"\") +\r\n      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\r\n  })\r\n\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"data/March 16 2025.csv","content":"﻿Class Name,Entries,Coins,Kills,Deaths,Vigor Flask,Bandage,Accelerator,Echo Bolt,Spring Plume,Hedge Seed,Risk-It Biscuit,Nox Bomb,Flame Trap,Lava Cake,Smoke Screen,Vigor Flask,Bandage,Accelerator,Echo Bolt,Spring Plume,Hedge Seed,Risk-It Biscuit,Nox Bomb,Flame Trap,Lava Cake,Smoke Screen\r\nFrost Knight,22,342,9,18,0,0,0,0,0,0,0,4,0,0,18,0,0,0,0,0,0,0,11,0,0,331\r\nGriefer,102,1809,108,90,1,7,0,1,3,23,0,6,0,49,12,9,170,0,7,126,231,0,88,0,950,228\r\nSkirmisher,22,183,20,20,0,5,0,3,3,0,5,2,4,0,0,0,79,0,18,29,0,23,3,31,0,0\r\nSpectre,43,891,43,32,14,2,0,0,2,0,0,0,9,0,16,296,131,0,0,68,0,0,0,285,0,111\r\nRanger,15,267,10,14,0,0,0,0,6,2,0,1,0,0,6,0,0,0,0,118,19,0,0,0,0,130\r\nArtillery,43,645,41,36,0,0,8,20,0,2,1,0,0,0,12,0,0,116,370,0,115,0,0,0,0,44\r\nChampion,23,238,17,21,3,0,0,7,0,0,2,0,0,11,0,29,0,0,48,0,0,14,0,0,147,0\r\nTitan,37,821,26,29,0,2,0,1,12,0,7,6,4,2,3,0,134,0,16,207,0,107,164,47,77,69\r\nAlchemist,14,518,29,9,0,0,0,0,0,0,0,8,3,0,3,0,0,0,0,0,0,0,252,144,0,122\r\nChronomancer,26,156,8,21,0,0,0,0,2,3,0,6,0,7,8,0,0,0,0,16,8,0,40,0,62,30\r\nHexblade,96,698,48,91,0,0,0,12,0,13,6,50,0,0,15,0,0,0,189,0,37,67,227,0,0,178\r\nCloudbreaker,18,365,28,16,0,0,0,0,0,5,10,0,0,0,3,0,0,0,0,0,21,322,0,0,0,22\r\nBattlesmith,69,1637,68,56,4,5,0,13,0,21,0,23,0,0,3,162,187,0,67,0,812,0,282,0,0,127\r\nStargazer,58,1014,43,46,4,0,0,2,6,11,7,4,15,1,8,82,0,0,50,220,118,106,65,286,5,82\r\nEvincer,211,2502,165,195,4,0,0,4,65,22,3,69,1,21,22,75,0,0,132,506,366,8,784,2,388,241\r\nVampire,43,864,61,38,11,4,0,0,0,4,0,10,0,10,4,218,141,0,0,0,121,0,113,0,250,21\r\nDancer,32,409,33,29,4,0,0,0,0,0,14,7,0,7,0,110,0,0,0,0,0,98,133,0,68,0\r\n","type":"text"},{"name":"data/March 22 2025.csv","content":"﻿Class Name,Entries,Coins,Kills,Deaths,Vigor Flask,Bandage,Accelerator,Echo Bolt,Spring Plume,Hedge Seed,Risk-It Biscuit,Nox Bomb,Flame Trap,Lava Cake,Smoke Screen,Vigor Flask,Bandage,Accelerator,Echo Bolt,Spring Plume,Hedge Seed,Risk-It Biscuit,Nox Bomb,Flame Trap,Lava Cake,Smoke Screen\r\nFrost Knight,19,369,21,18,0,0,0,0,0,1,7,0,0,4,7,0,0,0,0,0,24,156,0,0,36,153\r\nGriefer,27,538,18,25,0,0,0,0,0,0,0,0,0,16,11,0,0,0,0,0,0,0,0,0,240,298\r\nSkirmisher,28,575,24,26,0,0,0,0,11,16,0,0,0,0,1,0,0,0,0,257,314,0,0,0,0,4\r\nSpectre,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\r\nRanger,12,428,18,11,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,428,0,0\r\nArtillery,9,187,3,8,0,0,6,0,0,1,0,1,0,0,1,0,0,168,0,0,0,0,19,0,0,0\r\nChampion,22,433,17,21,0,0,0,20,0,0,0,0,0,2,0,0,0,0,416,0,0,0,0,0,17,0\r\nTitan,13,286,9,12,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,286,0,0,0,0\r\nAlchemist,6,67,1,6,0,0,0,0,0,0,0,5,0,0,1,0,0,0,0,0,0,0,63,0,0,4\r\nChronomancer,25,620,20,22,0,0,0,0,0,0,0,1,5,3,16,0,0,0,0,0,0,0,6,42,24,548\r\nHexblade,3,164,6,2,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,164\r\nCloudbreaker,8,122,6,7,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,122\r\nBattlesmith,12,351,18,11,0,0,0,8,0,4,0,0,0,0,0,0,0,0,264,0,87,0,0,0,0,0\r\nStargazer,26,696,20,20,2,0,0,0,1,11,0,3,0,0,9,123,0,0,0,24,191,0,168,0,0,190\r\nEvincer,48,986,53,45,0,13,0,13,0,0,0,0,0,22,0,0,375,0,345,0,0,0,0,0,266,0\r\nVampire,2,7,1,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,7,0\r\nDancer,17,287,10,16,0,0,7,0,0,0,5,5,0,0,0,0,0,174,0,0,0,24,89,0,0,0\r\n","type":"text"},{"name":"helpers.R","content":"# Load in relevant packages\r\nlibrary(ggplot2)\r\nlibrary(tidyverse)\r\nlibrary(glue)\r\n\r\n# Names vector for easy applications\r\nnames <- c( \"Class\", \"Entries\", \"Coins\", \"Kills\", \"Deaths\", \"Vigor.Flask.Entries\", \r\n            \"Bandage.Entries\", \"Accelerator.Entries\", \"Echo.Bolt.Entries\",\r\n            \"Spring.Plume.Entries\", \"Hedge.Seed.Entries\", \"Risk.It.Biscuit.Entries\",\r\n            \"Nox.Bomb.Entries\", \"Flame.Trap.Entries\", \"Lava.Cake.Entries\", \r\n            \"Smoke.Screen.Entries\",\r\n            \"Vigor.Flask.Coins\", \"Bandage.Coins\", \"Accelerator.Coins\", \r\n            \"Echo.Bolt.Coins\", \"Spring.Plume.Coins\", \"Hedge.Seed.Coins\",\r\n            \"Risk.It.Biscuit.Coins\", \"Nox.Bomb.Coins\", \"Flame.Trap.Coins\", \r\n            \"Lava.Cake.Coins\", \"Smoke.Screen.Coins\"\r\n)\r\n\r\n# Load in raw data and compile into list\r\nmar16 <- as_tibble(read.csv(\".\\\\data\\\\March 16 2025.csv\", TRUE))\r\nmar22 <- as_tibble(read.csv(\".\\\\data\\\\March 22 2025.csv\", TRUE))\r\n\r\nplaytests <- list(mar16, mar22)\r\ndates <- c(\"03/16/2025\", \"03/22/2025\")\r\nversions <- c(\"0.12.*\", \"0.12.*\")\r\n\r\n#Add dates to each raw dataset\r\nadd_dates <- function(tib, date = \"01/01/1990\", version_input = \"0.12.*\") {\r\n  dateFormatted <- as.Date(date, \"%m/%d/%Y\")\r\n  \r\n  result <- tib |>\r\n    mutate(date = dateFormatted,\r\n           version = version_input)\r\n  \r\n  return(result)\r\n}\r\n\r\ncombine <- function(tib1, tib2) {\r\n  result <- bind_rows(tib1, tib2)\r\n  return(result)\r\n}\r\n\r\n#Iterate through n datasets and combine them\r\ncompile <- function(tib_list, date_list, version_list) {\r\n  for(i in 1:length(date_list)) {\r\n    tib_list[[i]] <- add_dates(tib_list[[i]], date = date_list[[i]], version = version_list[[i]])\r\n  }\r\n  \r\n  for (i in 2:length(tib_list)) {\r\n    tib_list[[1]] <- combine(tib_list[[1]], tib_list[[i]])\r\n  }\r\n  \r\n  return(tib_list[[1]])\r\n}\r\n\r\ncg_data <- compile(playtests, dates, versions)\r\n\r\n#Add statistics that we are interested in\r\ncg_data_full <- cg_data |>\r\n  mutate(Entry.Percent = Entries / sum(Entries)) |>\r\n  group_by(Class.Name) |>\r\n  mutate(KPE = Kills / Entries,\r\n         CPE = Coins / Entries,\r\n         Entry.Percent = sum(Entry.Percent))","type":"text"},{"name":"www/goldnugget.png","content":"iVBORw0KGgoAAAANSUhEUgAAAKAAAACgBAMAAAB54XoeAAAAIGNIUk0AAHomAACAhAAA+gAA\nAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAYUExURQAAAH9SDPjSavn5aW5HC////+mxFdyW\nE0OL4r0AAAABdFJOUwBA5thmAAAAAWJLR0QF+G/pxwAAAAd0SU1FB+kHHA4xMlFkr+UAAAB1\nSURBVGje7dbBCYAwFERBW7AFW7AFW7AFW0j78nNQEgKCiqDOnPb0ztt1AAAAr9KXBAUFm60h\njCGvKQgKCtbBsTSHs1VBwT8Ec2sJgoKCdXDe5FYKgoKCzWp+cmkjKCh4ELzUEhT8bnCv3tQS\nFPxuEAAA4Ekr+3ybyKK5dtQAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjUtMDctMjhUMTQ6NDk6\nNTArMDA6MDDznsg9AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDI1LTA3LTI4VDE0OjQ5OjUwKzAw\nOjAwgsNwgQAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyNS0wNy0yOFQxNDo0OTo1MCswMDow\nMNXWUV4AAAAASUVORK5CYII=","type":"binary"}]
